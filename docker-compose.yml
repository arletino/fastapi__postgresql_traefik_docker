services:
  postgres:
    container_name: postgres_container
    image: postgres:16.3-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "standb"
      POSTGRES_USER: "stanuser"
      POSTGRES_PASSWORD: "pgpwd4stan"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./2. Init Database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stanuser -d standb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.6
    environment:
      PGADMIN_DEFAULT_EMAIL: "stantech@stan.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4stan"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_URI: "postgres:5432/standb?sslmode=disable"
      DATA_SOURCE_USER: "stanuser"
      DATA_SOURCE_PASS: "pgpwd4stan"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yml"
    volumes:
      - ./queries.yaml:/etc/postgres_exporter:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - postgres

  fastapi:
    container_name: fastapi
    image: fastapi
    build:
      context: .
      dockerfile: fastapi.dockerfile
    volumes:
      - app:/build
    ports:
      - "8000:80"
    restart: unless-stopped
    networks:
      - postgres

  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock 
      #    network:
      #- postgres



volumes:
# nginx_settings: ./ngnix
  app:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/serv_test/app
  pgadmin-data: # ./pgadmin_data
  db-data:
    driver: local
    driver_opts:
      type: none 
      o: bind
      device: ~/serv_test/pg/pgdata

networks:
    postgres:
      driver: bridge
